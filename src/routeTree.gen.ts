/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardTasksImport } from './routes/dashboard/tasks'
import { Route as DashboardNotesImport } from './routes/dashboard/notes'
import { Route as DashboardAccountImport } from './routes/dashboard/account'
import { Route as DashboardCanvasIndexImport } from './routes/dashboard/canvas/index'
import { Route as DashboardCanvasRoomIdImport } from './routes/dashboard/canvas/$roomId'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardTasksRoute = DashboardTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardNotesRoute = DashboardNotesImport.update({
  id: '/notes',
  path: '/notes',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAccountRoute = DashboardAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCanvasIndexRoute = DashboardCanvasIndexImport.update({
  id: '/canvas/',
  path: '/canvas/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCanvasRoomIdRoute = DashboardCanvasRoomIdImport.update({
  id: '/canvas/$roomId',
  path: '/canvas/$roomId',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/account': {
      id: '/dashboard/account'
      path: '/account'
      fullPath: '/dashboard/account'
      preLoaderRoute: typeof DashboardAccountImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/notes': {
      id: '/dashboard/notes'
      path: '/notes'
      fullPath: '/dashboard/notes'
      preLoaderRoute: typeof DashboardNotesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/tasks': {
      id: '/dashboard/tasks'
      path: '/tasks'
      fullPath: '/dashboard/tasks'
      preLoaderRoute: typeof DashboardTasksImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/canvas/$roomId': {
      id: '/dashboard/canvas/$roomId'
      path: '/canvas/$roomId'
      fullPath: '/dashboard/canvas/$roomId'
      preLoaderRoute: typeof DashboardCanvasRoomIdImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/canvas/': {
      id: '/dashboard/canvas/'
      path: '/canvas'
      fullPath: '/dashboard/canvas'
      preLoaderRoute: typeof DashboardCanvasIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardAccountRoute: typeof DashboardAccountRoute
  DashboardNotesRoute: typeof DashboardNotesRoute
  DashboardTasksRoute: typeof DashboardTasksRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCanvasRoomIdRoute: typeof DashboardCanvasRoomIdRoute
  DashboardCanvasIndexRoute: typeof DashboardCanvasIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAccountRoute: DashboardAccountRoute,
  DashboardNotesRoute: DashboardNotesRoute,
  DashboardTasksRoute: DashboardTasksRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCanvasRoomIdRoute: DashboardCanvasRoomIdRoute,
  DashboardCanvasIndexRoute: DashboardCanvasIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/notes': typeof DashboardNotesRoute
  '/dashboard/tasks': typeof DashboardTasksRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/canvas/$roomId': typeof DashboardCanvasRoomIdRoute
  '/dashboard/canvas': typeof DashboardCanvasIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/notes': typeof DashboardNotesRoute
  '/dashboard/tasks': typeof DashboardTasksRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/canvas/$roomId': typeof DashboardCanvasRoomIdRoute
  '/dashboard/canvas': typeof DashboardCanvasIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard/account': typeof DashboardAccountRoute
  '/dashboard/notes': typeof DashboardNotesRoute
  '/dashboard/tasks': typeof DashboardTasksRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/canvas/$roomId': typeof DashboardCanvasRoomIdRoute
  '/dashboard/canvas/': typeof DashboardCanvasIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/account'
    | '/dashboard/notes'
    | '/dashboard/tasks'
    | '/dashboard/'
    | '/dashboard/canvas/$roomId'
    | '/dashboard/canvas'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/account'
    | '/dashboard/notes'
    | '/dashboard/tasks'
    | '/dashboard'
    | '/dashboard/canvas/$roomId'
    | '/dashboard/canvas'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/account'
    | '/dashboard/notes'
    | '/dashboard/tasks'
    | '/dashboard/'
    | '/dashboard/canvas/$roomId'
    | '/dashboard/canvas/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/account",
        "/dashboard/notes",
        "/dashboard/tasks",
        "/dashboard/",
        "/dashboard/canvas/$roomId",
        "/dashboard/canvas/"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/dashboard/account": {
      "filePath": "dashboard/account.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/notes": {
      "filePath": "dashboard/notes.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/tasks": {
      "filePath": "dashboard/tasks.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/canvas/$roomId": {
      "filePath": "dashboard/canvas/$roomId.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/canvas/": {
      "filePath": "dashboard/canvas/index.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
